(function(sc) {
  "use strict";

  require("../../klass");
  require("../../dollarSC");

  sc.lang.klass.refine("Object", {
    js: function() {
      return this._raw;
    },
    __tag__: function() {
      return sc.C.TAG_OBJ;
    },
    __num__: function() {
      return 0;
    },
    __str__: function() {
      return this._class._name;
    },
    NotYetImplemented: [
      "$newCopyArgs",
      "dump",
      "post",
      "postln",
      "postc",
      "postcln",
      "postcs",
      "totalFree",
      "largestFreeBlock",
      "gcDumpGrey",
      "gcDumpSet",
      "gcInfo",
      "gcSanity",
      "canCallOS",
      "size",
      "indexedSize",
      "flatSize",
      "do",
      "generate",
      "respondsTo",
      "performMsg",
      "perform",
      "performList",
      "functionPerformList",
      "superPerform",
      "superPerformList",
      "tryPerform",
      "multiChannelPerform",
      "performWithEnvir",
      "performKeyValuePairs",
      "copy",
      "contentsCopy",
      "shallowCopy",
      "copyImmutable",
      "deepCopy",
      "dup",
      "poll",
      "value",
      "valueArray",
      "valueEnvir",
      "valueArrayEnvir",
      "equals",
      "compareObject",
      "instVarHash",
      "basicHash",
      "hash",
      "identityHash",
      "next",
      "reset",
      "first",
      "iter",
      "stop",
      "free",
      "clear",
      "removedFromScheduler",
      "isPlaying",
      "embedInStream",
      "cyc",
      "fin",
      "repeat",
      "loop",
      "asStream",
      "eventAt",
      "composeEvents",
      "finishEvent",
      "atLimit",
      "isRest",
      "threadPlayer",
      "threadPlayer_",
      "isNil",
      "notNil",
      "isNumber",
      "isInteger",
      "isFloat",
      "isSequenceableCollection",
      "isCollection",
      "isArray",
      "isString",
      "containsSeqColl",
      "isValidUGenInput",
      "isException",
      "isFunction",
      "matchItem",
      "trueAt",
      "falseAt",
      "pointsTo",
      "mutable",
      "frozen",
      "halt",
      "prHalt",
      "primitiveFailed",
      "reportError",
      "subclassResponsibility",
      "doesNotUnderstand",
      "shouldNotImplement",
      "outOfContextReturn",
      "immutableError",
      "deprecated",
      "mustBeBoolean",
      "notYetImplemented",
      "dumpBackTrace",
      "getBackTrace",
      "throw",
      "species",
      "asCollection",
      "asSymbol",
      "asString",
      "asCompileString",
      "cs",
      "printClassNameOn",
      "printOn",
      "storeOn",
      "storeParamsOn",
      "simplifyStoreArgs",
      "storeArgs",
      "storeModifiersOn",
      "as",
      "dereference",
      "reference",
      "asRef",
      "asArray",
      "asSequenceableCollection",
      "rank",
      "deepCollect",
      "deepDo",
      "slice",
      "shape",
      "unbubble",
      "bubble",
      "obtain",
      "instill",
      "addFunc",
      "removeFunc",
      "replaceFunc",
      "addFuncTo",
      "removeFuncFrom",
      "while",
      "switch",
      "yield",
      "alwaysYield",
      "yieldAndReset",
      "idle",
      "while",
      "dependants",
      "changed",
      "addDependant",
      "removeDependant",
      "release",
      "releaseDependants",
      "update",
      "addUniqueMethod",
      "removeUniqueMethods",
      "removeUniqueMethod",
      "inspect",
      "inspectorClass",
      "inspector",
      "crash",
      "stackDepth",
      "dumpStack",
      "dumpDetailedBackTrace",
      "freeze",
      "asInt",
      "blend",
      "blendAt",
      "blendPut",
      "fuzzyEqual",
      "isUGen",
      "numChannels",
      "pair",
      "pairs",
      "awake",
      "beats_",
      "clock_",
      "performBinaryOpOnSomething",
      "performBinaryOpOnSimpleNumber",
      "performBinaryOpOnSignal",
      "performBinaryOpOnComplex",
      "performBinaryOpOnSeqColl",
      "performBinaryOpOnUGen",
      "writeDefFile",
      "protect",
      "isInputUGen",
      "isOutputUGen",
      "isControlUGen",
      "source",
      "asUGenInput",
      "asControlInput",
      "asAudioRateInput",
      "$prNew",
      "$prNewCopyArgs",
      "slotSize",
      "slotAt",
      "slotPut",
      "slotKey",
      "slotIndex",
      "slotsDo",
      "slotValuesDo",
      "getSlots",
      "setSlots",
      "instVarSize",
      "instVarAt",
      "instVarPut",
      "writeArchive",
      "$readArchive",
      "asArchive",
      "initFromArchive",
      "archiveAsCompileString",
      "archiveAsObject",
      "checkCanArchive",
      "writeTextArchive",
      "protect",
      "$readTextArchive",
      "asTextArchive",
      "getContainedObjects",
      "writeBinaryArchive",
      "$readBinaryArchive",
      "asBinaryArchive",
      "genNext",
      "genCurrent",
      "$classRedirect",
      "help",
    ]
  });

})(sc);
